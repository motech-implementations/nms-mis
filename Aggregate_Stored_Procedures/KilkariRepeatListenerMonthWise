DELIMITER $$

CREATE DEFINER=`etluser`@`%` PROCEDURE `KilkariRepeatListenerMonthWise`()
BEGIN
DECLARE dt DATETIME;
DECLARE i INT;
SET dt = (select cast(tb.last_etl_time as datetime) from KilkariAgg.ETL_info_table tb where tb.table_id = 47);
SET i = 1;
WHILE i<2 DO
SET i=i+1;
TRUNCATE table KilkariAgg.agg_kilkari_repeat_listener_month_wise_temp;

insert into KilkariAgg.agg_kilkari_repeat_listener_month_wise_temp(state_id, district_id, healthBlock_id,date, 5_calls_answered, 4_calls_answered, 3_calls_answered, 2_calls_answered, 1_calls_answered, 0_calls_answered, greater_than_5)

select a.state_id, a.district_id, a.healthBlock_id, a.date, SUM(a.5calls), SUM(a.4calls), SUM(a.3calls), SUM(a.2calls), SUM(a.1calls), SUM(a.0calls),SUM(a.greaterthan5calls) from 
(select state_id, district_id, healthBlock_id,dt as date,  count(distinct id) as '5calls', '0' as '4calls', '0' as '3calls', '0' as '2calls', '0' as '1calls','0' as '0calls', '0' as 'greaterthan5calls' from beneficiary_tracker where id in (select distinct beneficiaryTracking_id from beneficiary_call_measure where call_source = 'OBD'and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) and beneficiaryTracking_id is not null group by beneficiaryTracking_id having COUNT(case when call_source = 'OBD' and call_status = 'SUCCESS' and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) THEN id END) = 5) group by state_id, district_id, healthBlock_id
UNION ALL
select  state_id, district_id, healthBlock_id,dt as date,'0' as '5calls', count(distinct id) as '4calls', '0' as '3calls', '0' as '2calls', '0' as '1calls', '0' as '0calls' ,'0' as 'greaterthan5calls' from beneficiary_tracker where id in (select distinct beneficiaryTracking_id from beneficiary_call_measure where call_source = 'OBD'and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) and beneficiaryTracking_id is not null group by beneficiaryTracking_id having COUNT(case when call_source = 'OBD' and call_status = 'SUCCESS' and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) THEN id END) = 4) group by state_id, district_id, healthBlock_id
UNION ALL
select state_id, district_id, healthBlock_id, dt as date,'0' as '5calls', '0' as '4calls', count(distinct id) as '3calls', '0' as '2calls', '0' as '1calls', '0' as '0calls','0' as 'greaterthan5calls' from beneficiary_tracker where id in (select distinct beneficiaryTracking_id from beneficiary_call_measure where call_source = 'OBD'and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) and beneficiaryTracking_id is not null group by beneficiaryTracking_id having COUNT(case when call_source = 'OBD' and call_status = 'SUCCESS' and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) THEN id END) = 3) group by state_id, district_id, healthBlock_id
UNION ALL
select  state_id, district_id, healthBlock_id,dt as date, '0' as '5calls', '0' as '4calls', '0' as '3calls', count(distinct id) as '2calls', '0' as '1calls', '0' as '0calls','0' as 'greaterthan5calls' from beneficiary_tracker where id in (select distinct beneficiaryTracking_id from beneficiary_call_measure where call_source = 'OBD'and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) and beneficiaryTracking_id is not null group by beneficiaryTracking_id having COUNT(case when call_source = 'OBD' and call_status = 'SUCCESS' and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) THEN id END) = 2) group by state_id, district_id, healthBlock_id
UNION ALL
select  state_id, district_id, healthBlock_id,dt as date, '0' as '5calls', '0' as '4calls', '0' as '3calls', '0' as '2calls', count(distinct id) as '1calls', '0' as '0calls','0' as 'greaterthan5calls' from beneficiary_tracker where id in (select distinct beneficiaryTracking_id from beneficiary_call_measure where call_source = 'OBD'and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) and beneficiaryTracking_id is not null group by beneficiaryTracking_id having COUNT(case when call_source = 'OBD' and call_status = 'SUCCESS' and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) THEN id END) = 1) group by state_id, district_id, healthBlock_id
UNION ALL
select  state_id, district_id, healthBlock_id, dt as date, '0' as '5calls', '0' as '4calls', '0' as '3calls', '0' as '2calls', '0' as '1calls', count(distinct id) as '0calls','0' as 'greaterthan5calls' from beneficiary_tracker where id in (select distinct beneficiaryTracking_id from beneficiary_call_measure where call_source = 'OBD'and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) and beneficiaryTracking_id is not null group by beneficiaryTracking_id having COUNT(case when call_source = 'OBD' and call_status = 'SUCCESS' and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) THEN id END) = 0) group by state_id, district_id, healthBlock_id
UNION ALL
select  state_id, district_id, healthBlock_id,dt as date, '0' as '5calls', '0' as '4calls', '0' as '3calls', '0' as '2calls','0' as '1calls', '0' as '0calls',count(distinct id) as 'greaterthan5calls' from beneficiary_tracker where id in (select distinct beneficiaryTracking_id from beneficiary_call_measure where call_source = 'OBD'and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) and beneficiaryTracking_id is not null group by beneficiaryTracking_id having COUNT(case when call_source = 'OBD' and call_status = 'SUCCESS' and modificationdate between dt and DATE_ADD(dt, INTERVAL 1 MONTH) THEN id END) > 5) group by state_id, district_id, healthBlock_id) as a group by a.state_id, a.district_id, a.healthBlock_id;

INSERT INTO `KilkariAgg`.`agg_kilkari_repeat_listener_month_wise` ( `location_type`, `location_id`, `date`, `5_calls_answered`, `4_calls_answered`, `3_calls_answered`, `2_calls_answered`, `1_calls_answered`, `0_calls_answered`, `greater_than_5`)

select 'NATIONAL' as 'location_type', 0 as location_id, date, SUM(5_calls_answered), SUM(4_calls_answered), SUM(3_calls_answered), SUM(2_calls_answered), SUM(1_calls_answered), SUM(0_calls_answered),SUM(greater_than_5) from KilkariAgg.agg_kilkari_repeat_listener_month_wise_temp

UNION ALL
select 'STATE' as 'location_type', state_id, date, SUM(5_calls_answered), SUM(4_calls_answered), SUM(3_calls_answered), SUM(2_calls_answered), SUM(1_calls_answered), SUM(0_calls_answered),SUM(greater_than_5) from KilkariAgg.agg_kilkari_repeat_listener_month_wise_temp group by state_id

UNION ALL
select 'DISTRICT' as 'location_type', district_id, date, SUM(5_calls_answered), SUM(4_calls_answered), SUM(3_calls_answered), SUM(2_calls_answered), SUM(1_calls_answered), SUM(0_calls_answered),SUM(greater_than_5) from KilkariAgg.agg_kilkari_repeat_listener_month_wise_temp group by district_id

UNION ALL
select 'BLOCK' as 'location_type', healthBlock_id, date, SUM(5_calls_answered), SUM(4_calls_answered), SUM(3_calls_answered), SUM(2_calls_answered), SUM(1_calls_answered), SUM(0_calls_answered),SUM(greater_than_5) from KilkariAgg.agg_kilkari_repeat_listener_month_wise_temp group by healthBlock_id;

SET dt = DATE_ADD(dt, INTERVAL 1 MONTH);
update ETL_info_table set last_etl_time = dt where table_id = 47;
 
END WHILE;
END
