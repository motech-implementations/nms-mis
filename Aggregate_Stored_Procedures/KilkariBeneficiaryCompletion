CREATE DEFINER=`etluser`@`%` PROCEDURE `KilkariBeneficiaryCompletion`()
BEGIN
DECLARE dt DATETIME;
DECLARE i INT;
SET dt = (select cast(last_etl_time as datetime) from KilkariAgg.ETL_info_table where table_id = 49);
SET i = 1;
WHILE i<35 DO
SET i=i+1;

truncate table KilkariAgg.agg_kilkari_beneficiary_completion_day_wise_temp;

insert into KilkariAgg.agg_kilkari_beneficiary_completion_day_wise_temp (state_id, district_id, block_id, subcentre_id, date, total_beneficiaries_completed, content_listened_more_than_75_per, content_listened_50_to_75_per, content_listened_25_to_50_per, content_listened_1_to_25_per , total_age) 

select b.state_id, b.district_id, b.healthBlock_id, b.healthSubFacility_id, dt as date, 
count(*) as total_beneficiaries_completed,
COUNT(case when a.content_listened >=75 THEN a.beneficiaryTracking_id END) as 'morethan75', 
COUNT(case when a.content_listened >=50 and a.content_listened <75 THEN a.beneficiaryTracking_id END) as '50and75', 
COUNT(case when a.content_listened >=25 and a.content_listened < 50 THEN a.beneficiaryTracking_id END) as '25and50', 
COUNT(case when a.content_listened < 25 THEN a.beneficiaryTracking_id END) as 'lessthan25',
SUM(a.ageOnService) as 'total_age'
from (
select s.beneficiaryTracking_id, 
case when s.subscriptionPack_id = 1 then s.ageOnService 
	 when s.subscriptionPack_id = 2 and s.mother_subscription_id is null then s.ageOnService
	 else s.ageOnService + ( select ageOnService from subscriptions where subscription_id = s.mother_subscription_id) end as ageOnService,
case when s.subscriptionPack_id = 1 then s.percentageContentListenedTo 
	 when s.subscriptionPack_id = 2 and s.mother_subscription_id is null then s.percentageContentListenedTo
	 else (s.percentageContentListenedTo * s.percentageCallsAnswered * s.ageOnService + ( select percentageContentListenedTo * percentageCallsAnswered * ageOnService from subscriptions where subscription_id = s.mother_subscription_id)) / 
	 	(s.percentageCallsAnswered * s.ageOnService + ( select percentageCallsAnswered * ageOnService from subscriptions where subscription_id = s.mother_subscription_id))  end as content_listened
from subscriptions s where s.endDate between DATE_ADD(dt, INTERVAL -1 DAY) and dt and s.subscription_status = 'COMPLETED' group by s.beneficiaryTracking_id
) as a LEFT JOIN KilkariAgg.beneficiary_tracker b on a.beneficiaryTracking_id=b.id group by b.state_id, b.district_id, b.healthBlock_id, b.healthSubFacility_id;

TRUNCATE table KilkariAgg.agg_kilkari_beneficiary_completion_day_wise;

insert into KilkariAgg.agg_kilkari_beneficiary_completion_day_wise (location_type, location_id, date, total_beneficiaries_completed, content_listened_more_than_75_per, content_listened_50_to_75_per, content_listened_25_to_50_per, content_listened_1_to_25_per , total_age)

select 'STATE' as location_type, state_id as location_id, date as date, SUM(total_beneficiaries_completed), SUM(content_listened_more_than_75_per), SUM(content_listened_50_to_75_per), SUM(content_listened_25_to_50_per), SUM(content_listened_1_to_25_per) , SUM(total_age) from agg_kilkari_beneficiary_completion_day_wise_temp group by state_id

UNION ALL
select 'DISTRICT' as location_type, district_id as location_id, date as date, SUM(total_beneficiaries_completed), SUM(content_listened_more_than_75_per), SUM(content_listened_50_to_75_per), SUM(content_listened_25_to_50_per), SUM(content_listened_1_to_25_per) , SUM(total_age) from agg_kilkari_beneficiary_completion_day_wise_temp group by district_id

UNION ALL
select 'BLOCK' as location_type, block_id as location_id, date as date, SUM(total_beneficiaries_completed), SUM(content_listened_more_than_75_per), SUM(content_listened_50_to_75_per), SUM(content_listened_25_to_50_per), SUM(content_listened_1_to_25_per) , SUM(total_age) from agg_kilkari_beneficiary_completion_day_wise_temp group by block_id

UNION ALL
select 'SUBCENTRE' as location_type, subcentre_id as location_id, date as date, SUM(total_beneficiaries_completed), SUM(content_listened_more_than_75_per), SUM(content_listened_50_to_75_per), SUM(content_listened_25_to_50_per), SUM(content_listened_1_to_25_per) , SUM(total_age) from agg_kilkari_beneficiary_completion_day_wise_temp group by subcentre_id;


insert into KilkariAgg.agg_kilkari_beneficiary_completion (location_type, location_id, date, total_beneficiaries_completed, content_listened_more_than_75_per, content_listened_50_to_75_per, content_listened_25_to_50_per, content_listened_1_to_25_per , total_age)

select gkc.location_type, gkc.location_id, dt, sum(gkc.total_beneficiaries_completed), sum(gkc.content_listened_more_than_75_per), sum(gkc.content_listened_50_to_75_per), sum(gkc.content_listened_25_to_50_per), sum(gkc.content_listened_1_to_25_per), SUM(gkc.total_age) from (
select kcd.location_type, kcd.location_id, kcd.date, kcd.total_beneficiaries_completed, kcd.content_listened_more_than_75_per, kcd.content_listened_50_to_75_per, kcd.content_listened_25_to_50_per,kcd.content_listened_1_to_25_per,kcd.total_age
from KilkariAgg.agg_kilkari_beneficiary_completion_day_wise kcd

UNION ALL
select kc.location_type, kc.location_id, kc.date, kc.total_beneficiaries_completed, kc.content_listened_more_than_75_per, kc.content_listened_50_to_75_per, kc.content_listened_25_to_50_per,kc.content_listened_1_to_25_per,kc.total_age
from KilkariAgg.agg_kilkari_beneficiary_completion kc where kc.date = DATE_ADD(dt, INTERVAL -1 DAY)) gkc 
group by gkc.location_type, gkc.location_id;

SET dt = DATE_ADD(dt, INTERVAL 1 DAY);
update KilkariAgg.ETL_info_table set last_etl_time = dt where table_id = 49;

END WHILE;

END
